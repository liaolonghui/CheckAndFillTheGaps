function get_result(dp, s1, s2, x=s1.length, y=s2.length, result='') {
	if (x===0 || y===0) {
		// 找完了
		return result
	}
	if (s1[x-1] === s2[y-1]) {
		// 相等时
		return get_result(dp, s1, s2, x-1, y-1, result+s1[x-1])
	} else {
		// 不相等时
		if (dp[y-1][x] > dp[y][x-1]) {// 找出最大值
			return get_result(dp, s1, s2, x, y-1, result)
		} else {
			return get_result(dp, s1, s2, x-1, y, result)
		}
	}
}


const dp = [
  [
    0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0,
    0, 0
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1,
    1, 1
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    2, 2
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    3, 3
  ],
  [
    0, 1, 1, 1, 1, 1,
    1, 1, 1, 2, 2, 2,
    3, 4
  ]
]

console.log(get_result(dp, 'bss2516scmmnd', 'bnmgjcxvxvnd'))